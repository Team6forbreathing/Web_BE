name: Spring Boot CI/CD
 
on:
  push:
    branches:
      - feat/user-detail
  pull_request:
    branches:
      - feat/user-detail

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout 코드
      - name: Checkout 코드
        uses: actions/checkout@v3

      # Step 2: JDK 17 설정
      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Step 3: Gradle 캐시 설정
      - name: Gradle 캐시
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Step 4: 환경 변수 디버깅
      - name: 환경 변수 확인
        run: |
          echo "SECRET_KEY is set to: ${{ secrets.SECRET_KEY }}"
          echo "MYSQL_URL is set to: ${{ secrets.MYSQL_URL }}"
          if [ -z "${{ secrets.SECRET_KEY }}" ]; then
            echo "Error: SECRET_KEY is empty or not set"
            exit 1
          fi
          if [ -z "${{ secrets.MYSQL_URL }}" ]; then
            echo "Error: MYSQL_URL is empty or not set"
            exit 1
          fi

      # Step 5: Gradle 빌드 (테스트 건너뛰기)
      - name: Gradle 빌드
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ACCESS_TOKEN_EXPIRY: ${{ secrets.ACCESS_TOKEN_EXPIRY }}
          REFRESH_TOKEN_EXPIRY: ${{ secrets.REFRESH_TOKEN_EXPIRY }}
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PW: ${{ secrets.MYSQL_PW }}
          INFLUX_URL: ${{ secrets.INFLUX_URL }}
          INFLUX_ORG: ${{ secrets.INFLUX_ORG }}
          INFLUX_BUCKET: ${{ secrets.INFLUX_BUCKET }}
          INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test --no-daemon

      
